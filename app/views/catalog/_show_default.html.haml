= render 'shared/modal_waiting_panel'

%h3
  %span Primary Document
- uris = [MetadataHelper::IDENTIFIER, MetadataHelper::TYPE, MetadataHelper::SOURCE]
- documents = item_documents(document, uris)
- if documents.empty?
  = raw render_no_primary_document
- else
  - if has_one_document?(document)
    - doc = documents[0]
    - type = doc[MetadataHelper::TYPE].to_s
    - if type == "Text"
      %pre
        = raw render_primary_text(document)
    - elsif type == "Image"
      %img{:src => doc[MetadataHelper::SOURCE], :style => "max-width:50%;"}/
    - elsif type == "Video"
    - elsif type == "Audio"
      %audio{:controls => "", :style => "width:450px"}
        %source{:src => doc[MetadataHelper::SOURCE], :type => "audio/wav"}
          %source{:src => doc[MetadataHelper::SOURCE], :type => "audio/mpeg"}
            %embed{:height => "50", :src => doc[MetadataHelper::SOURCE], :width => "100"}
    - else
      = raw render_no_primary_document
  - elsif has_only_text_documents?(document)
    %pre
      = raw render_primary_text(document)
  - else
    = raw render_no_primary_document
%h3
  %span Item Details
%dl.dl-horizontal.dl-invert
  - document_show_fields(document).each do |solr_fname, field|
    - if should_render_show_field? document, field
      %dt{:class => "blacklight-#{solr_fname.parameterize}"}
        = render_document_show_field_label document, :field => solr_fname
      - if solr_fname == 'OLAC_language'
        %dd{:class => "blacklight-#{solr_fname.parameterize}"}
          = raw render_language_codes document[solr_fname]
      - elsif solr_fname == 'DC_type'
        %dd{:class => "blacklight-#{solr_fname.parameterize}"}
          = format_duplicates(document[solr_fname])
      - else
        %dd{:class => "blacklight-#{solr_fname.parameterize}"}
          = render_document_show_field_value document, :field => solr_fname
  - do_not_display = {'id' => nil,
               'timestamp' => nil,
               'full_text' => nil,
     MetadataHelper::short_form(MetadataHelper::RDF_TYPE) + '_tesim' => nil,
                 'date_group_tesim' => nil,
                 'all_metadata' => nil,
                 '_version_' => nil,
                 'item_lists' => nil}
  - do_not_display = {} if Rails.env.development? # In development, display everything
  - do_not_display.merge!(document_show_fields(document))
  - document.keys.each do |k|
    - v = document[k]
    - unless do_not_display.has_key?(k)
      %dt.blacklight= format_key(k)
      - if k == 'DC_type'
        %dd.blacklight= format_duplicates(v)
      - else
        %dd.blacklight= format_value(v)
%h3
  %span Documents
- uris = [MetadataHelper::IDENTIFIER, MetadataHelper::TYPE, MetadataHelper::EXTENT, MetadataHelper::SOURCE]
- documents = item_documents(document, uris)
- if documents.empty?
  %em This Item has no documents
- else
  - is_cooee = document[MetadataHelper::short_form(MetadataHelper::IS_PART_OF)][0] == "cooee"
  - type_format = get_type_format(document, is_cooee)
  %table.document-table.table.table-striped{:border => "0"}
    %thead
      %tr
        %th Filename
        %th Type
        %th Size
    %tbody
      - documents.each_with_index do |values, index|
        %tr
          - if values.has_key?(MetadataHelper::SOURCE)
            %td
              %a{:href => "/catalog/#{document[:id]}/document/#{values[MetadataHelper::IDENTIFIER]}", :onclick => "showProgressAnimation();"}= values[MetadataHelper::IDENTIFIER]
          - else
            %td= values[MetadataHelper::IDENTIFIER]
          - if values.has_key?(MetadataHelper::TYPE)
            - field = values[MetadataHelper::TYPE]
            - field = "unlabelled" if field == ""
            - field = "Plain" if is_cooee && field == type
          - else
            - field = "unlabelled"
          %td= sprintf(type_format, field)
          - if values.has_key?(MetadataHelper::EXTENT)
            - field = values[MetadataHelper::EXTENT]
            - if field.nil? || field == ""
              - field = "unknown"
            - else
              - field = format_extent(field.to_i, 'B')
          - else
            - field = "unknown"
          %td= field
  - if eopas_viewable? params[:id]
    = link_to('View in EOPAS', eopas_path, class: 'btn')

:javascript

