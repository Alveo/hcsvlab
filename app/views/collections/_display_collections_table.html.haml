#content
  #sortAndPerPage.clearfix
    .css-dropdown.pull-left
      %a.btn.dropdown-toggle{"data-toggle" => "dropdown", :href => "#"}
        Add selected to Collection list
        %span.caret
      %ul#create_list_drop_down.dropdown-menu
        -@collectionLists.each do |aCollectionList|
          %li
            %a{:href => "#add_to_existing_collection_list", :id=>"#{aCollectionList.id}"}
              =aCollectionList.name[0]
        %li.divider
        %li
          %a#create_collection_list.testclass{"data-toggle" => "modal", :href => "#new_collection_list", :role => "button"} Create New Collection List
    %label#showhide-assigned.btn.checkbox
      %input{:type => "checkbox"} Hide grouped Collections

  #documents
    %table.table.table-condensed
      %thead
        %tr
          %th.checkbox_header
            %label{:for => "allnonecheckbox"}
              %span.btn
                %input#allnonecheckbox{:onclick => "toggleItemList(this)", :type => "checkbox"}/
          %th.name Collection
          %th.collection Collection List
          %th.licence Licence
          %th.terms Licence Terms
      %tbody
        - @collections.each do |aCollection|
          %tr
            %td.checkbox_field
              -if (aCollection.collectionList.nil?)
                %input.toggle_item_list{:name => "#{aCollection.id}", :type => "checkbox"}/
            %td.name
              = aCollection.short_name[0]
            %td.collection
              -if !(aCollection.collectionList.nil?)
                .label.licence
                  =(aCollection.collectionList.nil?)? "" :aCollection.collectionList.name[0]
                  %a.remove
            %td.licence
              -if (aCollection.collectionList.nil?)
                .css-dropdown
                  %button.dropdown-toggle.btn.btn-mini{ "data-toggle" => "dropdown" }
                    Add Licence
                    %span.caret
                  %ul.dropdown-menu
                    %li
                      %a{:href => "#add_licence", :onClick => "add_licence"} Licence Name
                    %li.divider
                    %li
                      = link_to("Create New", {:controller => "licences", :action => "new"})
              -else
                -# =(aCollection.collectionList.nil?)? "" :aCollection.collectionList.licence.name.first
            %td.terms
              -if !(aCollection.collectionList.nil?)
                %a.btn.btn-mini{"data-toggle" => "modal", :href => "", :role => "button"} View Licence Terms


#new_collection_list.modal.hide.fade{ tabindex:"-1", role:"dialog", 'aria-labelledby'=>"myModalLabel", 'aria-hidden'=>"true"}
  = form_for(CollectionList.new) do |f|
    .modal-header
      %h3#myModalLabel Create New Collection list
      %button.close{ type:"button", :"data-dismiss"=>"modal", "aria-hidden"=>"true"} Ã—
    #new_collection_list_dialog.modal-body{ title:"New Collection List"}
      %p
        #collection_list_error.create_collection_list_error
        %br
        = f.label :name
        = f.text_field :name

        = hidden_field_tag :sel_collection_ids
        = hidden_field_tag :all_collections

    .modal-footer
      %a.btn{:"data-dismiss"=>"modal", :"aria-hidden"=>"true()"}
        Close
      = f.submit "Create Collections List", class: "btn btn-primary", id:"new_collection_list_submit"


= render :partial=>"shared/modal_waiting_panel"


= form_tag({:controller => "collection_lists", :action => "add_collections"}, :id => "add_to_collection_list", :onSubmit => "showProgressAnimation();")  do
  = hidden_field_tag :id, "", {id: "collection_list_id"}
  = hidden_field_tag :sel_collection_ids_for_existing
  = hidden_field_tag :all_collections_for_existing


:javascript
  jQuery("#new_collection_list").submit( function() {
      jQuery("#new_collection_list_submit").attr('disabled','disabled');
      var new_name = jQuery("#collection_list_name").val().trim()
      if(new_name == "") {
        jQuery("#collection_list_error").text("Name can't be blank");
        jQuery("#new_collection_list_submit").removeAttr('disabled');
        return false;
      }
      var error = false;
      jQuery('a[href$="add_to_existing_collection_list"]').each(function() {
        if(this.text.trim() == new_name) {
          jQuery("#collection_list_error").text("Collection list name already exists");
          error = true;
        }
      });
      if(error) {
        jQuery("#new_collection_list_submit").removeAttr('disabled');
        return false;
      }
      jQuery("#new_collection_list").hide();
      jQuery("#new_collection_list_submit").removeAttr('disabled');
      showProgressAnimation();
      });

  function generateCollectionsIds(field) {
    jQuery(field).val("");
    checks = document.getElementsByClassName('toggle_item_list');
    for (var i=0, n=checks.length; i<n; i++) {
      if (checks[i].checked) {
        var existing = jQuery(field).val();
        if (existing == "") {
          jQuery(field).val(checks[i].name);
        }
        else {
          jQuery(field).val(existing + "," + checks[i].name);
        }
      }
    }
  };

  function insertParam(key,value) {
    key = escape(key);
    value = escape(value);
    var kvp = document.location.search.substr(1).split('&');

    var i=kvp.length;
    var x;
    while(i--) {
      x = kvp[i].split('=');
      if (x[0]==key) {
        x[1] = value;
        kvp[i] = x.join('=');
        break;
      }
    }

    if (i<0) {
      kvp[kvp.length] = [key,value].join('=');
    }

    //this will reload the page, it's likely better to store this until finished
    document.location.search = kvp.join('&');
  };


  function clearData() {
    jQuery("#collection_list_error").text("");
    jQuery("#collection_list_name").val("");
  };

  jQuery("#create_collection_list").click( function() {
  	clearData();
    generateCollectionsIds("#sel_collection_ids");
    jQuery("#all_collections").val("false");
  });

  jQuery("#create_all_collection_list").click( function() {
  	clearData();
    jQuery("#all_collections").val("true");
  });

  jQuery("A[href='#add_to_existing_collection_list']").click( function() {
    collectionListId=$(this).attr('id');
    generateCollectionsIds("#sel_collection_ids_for_existing");
    jQuery("#collection_list_id").val(collectionListId);
    jQuery("#all_collections_for_existing").val("false");
    jQuery("#add_to_collection_list").submit();
  });

  jQuery("A[href='#add_all_to_existing_collection_list']").click( function() {
    collectionListId=$(this).attr('id');
    jQuery("#collection_list_id").val(collectionListId);
    jQuery("#all_collections_for_existing").val("true");
    jQuery("#add_to_collection_list").submit();
  });

  //Set focus to the first element in the form of the modal panel
  jQuery('#new_collection_list').on('shown', function () {
    jQuery('input:text:visible:first', this).focus();
  })
