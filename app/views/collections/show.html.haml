= render partial: 'display_breadcrumb', locals: {nav_links: {'collections' => collections_path, "#{@collection.name}" => nil}}

- metadata_fields = collection_show_fields(@collection)
- collection_status = ""
- if CollectionsHelper.is_owner(current_user, @collection) || (!current_user.nil? && current_user.is_superuser?)
  - collection_status = " (#{@collection.status})"

.container-fluid
  .row-fluid
    .page-header
      .row-fluid
        .span4
          .pull-left
            %h2=@collection_title + collection_status
        .span8
          .pull-right
            - unless params[:state].nil?
              = link_to "Back to Licence Agreements", "/account/licence_agreements", :class => "btn btn-primary"

            - if can? :web_add_item, @collection
              %br
              - if !@collection.is_finalised?
                = link_to "Add New Item", web_add_item_path, :id => 'add_new_item', :class => "btn btn-primary"
              - else
                %button.btn{:disabled => "disabled", :type => "button"} Add New Item


            - if can? :web_add_item, @collection
              - if !@collection.is_finalised?
                = link_to "Import zip", new_collection_import_path(:collection_id => @collection.name), :id => 'upload_zip', :class => "btn btn-primary"
              - else
                %button.btn{:disabled => "disabled", :type => "button"} Import Zip

            - if CollectionsHelper.is_owner(current_user, @collection) || (!current_user.nil? && current_user.is_superuser?)
              - if !@collection.is_finalised? || current_user.is_superuser?
                = link_to "Edit", edit_collection_path, id: 'edit_collection', :class => "btn btn-primary"
              - else
                %button.btn{:disabled => "disabled", :type => "button"} Edit

            - if can? :delete_collection, @collection
              - if !@collection.is_finalised?
                - if @collection.items.size == 0
                  = link_to "Delete Collection", delete_collection_path, method: :delete, id: 'delete_collection', :class => "btn btn-danger", data: {confirm: "Are you sure to delete current collection?"}
                - else
                  %button.btn.btn-danger.btn-sm{:disabled => "disabled", :type => "button", :title => "Collection not empty, can't delete!"} Delete Collection?
              - else
                %button.btn{:disabled => "disabled", :type => "button"} Delete Collection

            - if CollectionsHelper.is_owner(current_user, @collection) || (!current_user.nil? && current_user.is_superuser?)
              - case @collection.vt_url
              - when nil
                -#= link_to "Start analyse", analyse_collection_path, id: 'analyse_collection', :class => "btn btn-primary"
                %a.btn.btn-primary{"data-toggle" => "modal", :href => "#previewModal"} Start analyse

              - when "n/a"
                %button.btn{:disabled => "disabled", :type => "button"} Text analysis processing...
              - when @collection.vt_url.start_with?("error")
                %button.btn{:disabled => "disabled", :type => "button"} Text analysis can't proceed...
              - else
                = link_to "Text Analysis", @collection.vt_url, id: 'vt_link', :class => "btn btn-primary", :target => '_blank'
            - else
              - if @collection.vt_url.present? && @collection.vt_url.start_with?("http")
                = link_to "Text Analysis", @collection.vt_url, id: 'vt_link', :class => "btn btn-primary", :target => '_blank'



  .row-fluid
    .span3{:style => "overflow-wrap:break-word;"}
      .well.sidebar-nav
        %ul.nav.nav-list.text-left
          %li.nav-header Metadata
          - metadata_fields.each do |field|
            - key = field.first[0]
            - if key == "Abstract" || key == "RDF Type" || key == "SPARQL Endpoint"
              - next
            - value = field.first[1].to_s
            - if current_user.nil? && (key == "Creator" || key.include?("Owner"))
              - value = value.gsub(/\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*/, '*email hidden*')
            %li
              %strong
                #{key}:
              #{value}

      .well.sidebar-nav
        %ul.nav.nav-list.text-left
          %li.nav-header Items
          Contains #{@collection.items.size} item(s)
          - if @collection.items.size > 0
            = link_to "Browse", catalog_index_path("f[collection_name_facet][]" => "#{@collection.name}")

      = render partial: 'display_attachment_sidebar', locals: {attachment_url: @attachment_url}

    .span1
    .span8
      .row-fluid
        = @collection.html_text.html_safe

= render 'shared/nectar_attribution'

#previewModal.modal.hide.fade{"aria-hidden" => "true", "aria-labelledby" => "myModalLabel", :role => "dialog", :tabindex => "-1"}
  = form_tag({controller: 'collections', action: 'analyse_collection'}, method: 'post', :id => 'proceed_analyse_collection_form') do |f|
    .modal-header
      %button.close{"aria-hidden" => "true", "data-dismiss" => "modal", :type => "button"} Ã—
      %h3#myModalLabel #{@collection.name}: select text files to be analysed
    .modal-body
      %p
        %label Select only files that match a particular regular expression ("plain\.txt" would be used if blank)
        = text_field_tag :doc_filter, nil, :placeholder => "e.g. plain\\.txt"
      #preview-result
        You can see the preview result here.
    .modal-footer
      %button.btn{"aria-hidden" => "true", "data-dismiss" => "modal"} Close
      = link_to 'Preview', preview_doc_filter_path(@collection.name), remote: true, :class => "btn btn-warning", :id => "preview_link"
      = submit_tag 'Proceed analyse', :class => "btn btn-primary", :id => 'proceed_btn'

:javascript
  $("#preview_link").click(function() {
    $(this).attr("href", "/preview-doc-filter/#{@collection.name}?p=" + encodeURIComponent($("#doc_filter").val()));
  });






